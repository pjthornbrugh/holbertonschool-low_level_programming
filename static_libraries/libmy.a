/*
 * File: libmy.a
 * Auth: Pilar Thornbrugh
 */

#include "main.h"

int _putchar(char c)
{
    return putchar(c);
}

int _islower(int c)

int _isalpha(int c)

int _abs(int n)

int _isupper(int c)

int _isdigit(int c)

int _strlen(char *s)
{
	int length = 0;
	while (*s != \0')
	{
		length++;
		s++;
	}
	return length;
}
void _puts(char *s)
{
	while (*s 1= '\0')
	{
		_putchar(*s);
		s++;
	}
}

char *_strcpy(char *dest, char *src)
{
	char *originalDest = dest;
	while (*src != '\0')
	{
		*dest = *src;
		dest++;
		src++;
	}
}

int _atoi(char *s)
{
	int result = 0;
	int sign = 1;

	if (*s == '-')
	{
		sign = -1;
		s++;
	}

	while (*s != '\0')
	{
		if (*s >= '0' && *s <= '9')
		{
			result = result * 1- + (*s - '0');
		}
		else
		{
			break;
		}
	}

	return sign + result;
}

char *_strcat(char *dest, char *src)
{
	char *originalDest = dest;

	while (*dest != '\0')
	{
		dest++;
	}

	while (*src != '\0')
	{
		*dest = *src;
		dest++;
		src++;
	}

	*dest = '\0';
	return originalDest;
}

char *_strncat(char *dest, char *src, int n)
{
	char *dest_start = dest;

	while (*dest != '\0')
	{
		dest++;
	}
	while (*src != '\0' && n > 0)
	{
		*dest = *src;
		dest++;
		src++;
		n--;
	}

	*dest = '\0';
	return dest_start;
}

char *_strncpy(char *dest, char *src, int n)
{
	char *dest_start = dest;

	while (*src != '\0' && n > 0)
	{
		*dest = *src;
		dest++;
		src++;
		n--;
	}

	while (n > 0)
	{
		*dest = '\0';
		dest++;
		n--;
	}

	return dest_start;
}

int _strcmp(char *s1, char *s2)
{
	while (*s1 != '\0' && *s2 != '\0' && *s1 == *s2)
	{
		s1++;
		s2++;
	}

	return (*s1 - *s2);
}

char *_memset(char *s, char b, unsigned int n)
{
	char *s_start = s;

	while (n > 0)
	{
		*s = b;
		s++;
		n--;
	}

	return s_start;
}

char *_memcpy(char *dest, char *src, unsigned int n)
{
	char *dest_start = dest;

	while (n > 0)
	{
		*dest = *src;
		dest++;
		src++;
		n--;
	}

	return dest_start;
}

char *_strchr(char *s, char c)
{
	while (*s != '\0')
	{
        	if (*s == c)
		{
			return s;
		}
	s++;
	}

	return NULL;
}

unsigned int _strspn(char *s, char *accept)
{
	unsigned int count = 0;

	while (*s != '\0')
	{
		if (_strchr(accept, *s) == NULL)
		{
			break;
		}

		count++;
		s++;
	}

	return count;
}

char *_strpbrk(char *s, char *accept) 
{
	while (*s != '\0')
	{
		if (_strchr(accept, *s) != NULL)
		{
			return s;
		}

	s++;
	}

	return NULL;
}

char *_strstr(char *haystack, char *needle)
{
	while (*haystack != '\0')
	{
		char *h = haystack;
		char *n = needle;

        while (*n != '\0' && *h == *n)
	{
		h++;
		n++;
	}

	if (*n == '\0') 
	{
		return haystack;
        }

	haystack++;
	}
	return NULL;
}


